You are a professional software engineer and code reviewer.

I am going to provide you with my full code base of my app or library. 
The code contains line numbers for each file in the codebase, given as 'num |line', e.g. '1 |first line content'. Each real line starts directly after the '|' character. Never include these line numbers or the '|' character in your response; they are just there to help you identify the line number of the code.
In the provided code, the start and end of each file are indicated with '--- File Start ---' and '--- File End ---' respectively. These are not part of the files and only indicate that the corresponding file content is everything in between. Therefore, never include these in your answers either.
You must thoroughly understand the entire code base, including file structure, code logic, and dependencies.

Your tasks:
1. Analyze and remember the full code base content I provide.
2. When I later ask questions about the code, answer precisely and based on this code base.
3. Important: If your answer to my question includes any code changes, you MUST provide your entire answer that includes code changes inside ONE COMBINED ````...```` block in following format:
````
CHANGE 1:
File: main.py
Start line: 15
# Before 
code_before

# After
code_after

CHANGE 2:
File: ui/data.py
Start line: 65
# Before
code_before

# After
code_after

NEW_FILE 1:
File: ui/my_widget1.dart
File content:
full_file1_content

NEW_FILE 2:
File: ui/my_widget2.dart
File content:
full_file2_content

REMOVE_FILE 1:
File: ui/file_to_be_removed1.dart

REMOVE_FILE 2:
File: ui/file_to_be_removed2.dart
````
VERY IMPORTANT: When stating the '# Before' block, make sure you give it in exactly the same way it was given to you, e.g., don't skip comments, etc. Also VERY IMPORTANT, your '# Before' block must ALWAYS be at least 5 lines of code (for example this is especially useful when you just want to add extra code to existing file).
4. Don't forget to update the line numbers of the files in your memory after suggesting changes for later questions. For example, if you suggest removing the first line of code, you must consider that the first line no longer exists and that the original line numbered 2 is now line 1 when reporting subsequent changes.
5. If your changes include creating a new file or deleting an entire existing file, provide these in the above format. Note that REMOVE_FILE and NEW_FILE should only be used for adding or removing entire files, not individual code snippets. Make sure new files are stated after the changes and removed files are stated at the very end. 
6. Don't for no reason remove existing comments in my code!

Here is my full code base for you to understand (important: don't start suggesting changes in your first answer to this prompt until i ask you a specific question later):


````
File Path: .gitignore
--- File Start ---
1    |# Dependency directories
2    |node_modules/
3    |
4    |# Compiled TypeScript output
5    |out/
6    |
7    |# VS Code extension packaging
8    |*.vsix
9    |
10   |# VS Code test runner directory
11   |.vscode-test/
12   |
13   |# Log files
14   |*.log
15   |npm-debug.log*
16   |yarn-debug.log*
17   |yarn-error.log*
18   |
19   |# OS-generated files
20   |.DS_Store
21   |.DS_Store?
22   |._*
23   |.Spotlight-V100
24   |.Trashes
25   |ehthumbs.db
26   |Thumbs.db
27   |
28   |# Temporary files and caches
29   |.npm
30   |
31   |# Layer snapshots (local to workspace)
32   |.vscode/changelayers/
--- File End ---

File Path: .vscodeignore
--- File Start ---
1    |.vscode
2    |.vscode-test
3    |.gitignore
4    |vsc-extension-quickstart.md
5    |**/tsconfig.json
6    |**/webpack.config.js
7    |**/src/**
8    |**/test/**
9    |out/
10   |node_modules/
11   |webpack/
--- File End ---

File Path: package-lock.json
--- File Start ---
1    |{
2    |  "name": "changelayers",
3    |  "version": "0.0.1",
4    |  "lockfileVersion": 3,
5    |  "requires": true,
6    |  "packages": {
7    |    "": {
8    |      "name": "changelayers",
9    |      "version": "0.0.1",
10   |      "devDependencies": {
11   |        "@types/node": "18.x",
12   |        "@types/vscode": "^1.80.0",
13   |        "@typescript-eslint/eslint-plugin": "^5.62.0",
14   |        "@typescript-eslint/parser": "^5.62.0",
15   |        "eslint": "^8.46.0",
16   |        "typescript": "^5.1.6"
17   |      },
18   |      "engines": {
19   |        "vscode": "^1.80.0"
20   |      }
21   |    },
22   |    "node_modules/@eslint-community/eslint-utils": {
23   |      "version": "4.7.0",
24   |      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz",
25   |      "integrity": "sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==",
26   |      "dev": true,
27   |      "license": "MIT",
28   |      "dependencies": {
29   |        "eslint-visitor-keys": "^3.4.3"
30   |      },
31   |      "engines": {
32   |        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
33   |      },
34   |      "funding": {
35   |        "url": "https://opencollective.com/eslint"
36   |      },
37   |      "peerDependencies": {
38   |        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
39   |      }
40   |    },
41   |    "node_modules/@eslint-community/regexpp": {
42   |      "version": "4.12.1",
43   |      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
44   |      "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
45   |      "dev": true,
46   |      "license": "MIT",
47   |      "engines": {
48   |        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
49   |      }
50   |    },
51   |    "node_modules/@eslint/eslintrc": {
52   |      "version": "2.1.4",
53   |      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz",
54   |      "integrity": "sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==",
55   |      "dev": true,
56   |      "license": "MIT",
57   |      "dependencies": {
58   |        "ajv": "^6.12.4",
59   |        "debug": "^4.3.2",
60   |        "espree": "^9.6.0",
61   |        "globals": "^13.19.0",
62   |        "ignore": "^5.2.0",
63   |        "import-fresh": "^3.2.1",
64   |        "js-yaml": "^4.1.0",
65   |        "minimatch": "^3.1.2",
66   |        "strip-json-comments": "^3.1.1"
67   |      },
68   |      "engines": {
69   |        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
70   |      },
71   |      "funding": {
72   |        "url": "https://opencollective.com/eslint"
73   |      }
74   |    },
75   |    "node_modules/@eslint/js": {
76   |      "version": "8.57.1",
77   |      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-8.57.1.tgz",
78   |      "integrity": "sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==",
79   |      "dev": true,
80   |      "license": "MIT",
81   |      "engines": {
82   |        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
83   |      }
84   |    },
85   |    "node_modules/@humanwhocodes/config-array": {
86   |      "version": "0.13.0",
87   |      "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.13.0.tgz",
88   |      "integrity": "sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==",
89   |      "deprecated": "Use @eslint/config-array instead",
90   |      "dev": true,
91   |      "license": "Apache-2.0",
92   |      "dependencies": {
93   |        "@humanwhocodes/object-schema": "^2.0.3",
94   |        "debug": "^4.3.1",
95   |        "minimatch": "^3.0.5"
96   |      },
97   |      "engines": {
98   |        "node": ">=10.10.0"
99   |      }
100  |    },
101  |    "node_modules/@humanwhocodes/module-importer": {
102  |      "version": "1.0.1",
103  |      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
104  |      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
105  |      "dev": true,
106  |      "license": "Apache-2.0",
107  |      "engines": {
108  |        "node": ">=12.22"
109  |      },
110  |      "funding": {
111  |        "type": "github",
112  |        "url": "https://github.com/sponsors/nzakas"
113  |      }
114  |    },
115  |    "node_modules/@humanwhocodes/object-schema": {
116  |      "version": "2.0.3",
117  |      "resolved": "https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.3.tgz",
118  |      "integrity": "sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==",
119  |      "deprecated": "Use @eslint/object-schema instead",
120  |      "dev": true,
121  |      "license": "BSD-3-Clause"
122  |    },
123  |    "node_modules/@nodelib/fs.scandir": {
124  |      "version": "2.1.5",
125  |      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
126  |      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
127  |      "dev": true,
128  |      "license": "MIT",
129  |      "dependencies": {
130  |        "@nodelib/fs.stat": "2.0.5",
131  |        "run-parallel": "^1.1.9"
132  |      },
133  |      "engines": {
134  |        "node": ">= 8"
135  |      }
136  |    },
137  |    "node_modules/@nodelib/fs.stat": {
138  |      "version": "2.0.5",
139  |      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
140  |      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
141  |      "dev": true,
142  |      "license": "MIT",
143  |      "engines": {
144  |        "node": ">= 8"
145  |      }
146  |    },
147  |    "node_modules/@nodelib/fs.walk": {
148  |      "version": "1.2.8",
149  |      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
150  |      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
151  |      "dev": true,
152  |      "license": "MIT",
153  |      "dependencies": {
154  |        "@nodelib/fs.scandir": "2.1.5",
155  |        "fastq": "^1.6.0"
156  |      },
157  |      "engines": {
158  |        "node": ">= 8"
159  |      }
160  |    },
161  |    "node_modules/@types/json-schema": {
162  |      "version": "7.0.15",
163  |      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
164  |      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
165  |      "dev": true,
166  |      "license": "MIT"
167  |    },
168  |    "node_modules/@types/node": {
169  |      "version": "18.19.121",
170  |      "resolved": "https://registry.npmjs.org/@types/node/-/node-18.19.121.tgz",
171  |      "integrity": "sha512-bHOrbyztmyYIi4f1R0s17QsPs1uyyYnGcXeZoGEd227oZjry0q6XQBQxd82X1I57zEfwO8h9Xo+Kl5gX1d9MwQ==",
172  |      "dev": true,
173  |      "license": "MIT",
174  |      "dependencies": {
175  |        "undici-types": "~5.26.4"
176  |      }
177  |    },
178  |    "node_modules/@types/semver": {
179  |      "version": "7.7.0",
180  |      "resolved": "https://registry.npmjs.org/@types/semver/-/semver-7.7.0.tgz",
181  |      "integrity": "sha512-k107IF4+Xr7UHjwDc7Cfd6PRQfbdkiRabXGRjo07b4WyPahFBZCZ1sE+BNxYIJPPg73UkfOsVOLwqVc/6ETrIA==",
182  |      "dev": true,
183  |      "license": "MIT"
184  |    },
185  |    "node_modules/@types/vscode": {
186  |      "version": "1.102.0",
187  |      "resolved": "https://registry.npmjs.org/@types/vscode/-/vscode-1.102.0.tgz",
188  |      "integrity": "sha512-V9sFXmcXz03FtYTSUsYsu5K0Q9wH9w9V25slddcxrh5JgORD14LpnOA7ov0L9ALi+6HrTjskLJ/tY5zeRF3TFA==",
189  |      "dev": true,
190  |      "license": "MIT"
191  |    },
192  |    "node_modules/@typescript-eslint/eslint-plugin": {
193  |      "version": "5.62.0",
194  |      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-5.62.0.tgz",
195  |      "integrity": "sha512-TiZzBSJja/LbhNPvk6yc0JrX9XqhQ0hdh6M2svYfsHGejaKFIAGd9MQ+ERIMzLGlN/kZoYIgdxFV0PuljTKXag==",
196  |      "dev": true,
197  |      "license": "MIT",
198  |      "dependencies": {
199  |        "@eslint-community/regexpp": "^4.4.0",
200  |        "@typescript-eslint/scope-manager": "5.62.0",
201  |        "@typescript-eslint/type-utils": "5.62.0",
202  |        "@typescript-eslint/utils": "5.62.0",
203  |        "debug": "^4.3.4",
204  |        "graphemer": "^1.4.0",
205  |        "ignore": "^5.2.0",
206  |        "natural-compare-lite": "^1.4.0",
207  |        "semver": "^7.3.7",
208  |        "tsutils": "^3.21.0"
209  |      },
210  |      "engines": {
211  |        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
212  |      },
213  |      "funding": {
214  |        "type": "opencollective",
215  |        "url": "https://opencollective.com/typescript-eslint"
216  |      },
217  |      "peerDependencies": {
218  |        "@typescript-eslint/parser": "^5.0.0",
219  |        "eslint": "^6.0.0 || ^7.0.0 || ^8.0.0"
220  |      },
221  |      "peerDependenciesMeta": {
222  |        "typescript": {
223  |          "optional": true
224  |        }
225  |      }
226  |    },
227  |    "node_modules/@typescript-eslint/parser": {
228  |      "version": "5.62.0",
229  |      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-5.62.0.tgz",
230  |      "integrity": "sha512-VlJEV0fOQ7BExOsHYAGrgbEiZoi8D+Bl2+f6V2RrXerRSylnp+ZBHmPvaIa8cz0Ajx7WO7Z5RqfgYg7ED1nRhA==",
231  |      "dev": true,
232  |      "license": "BSD-2-Clause",
233  |      "dependencies": {
234  |        "@typescript-eslint/scope-manager": "5.62.0",
235  |        "@typescript-eslint/types": "5.62.0",
236  |        "@typescript-eslint/typescript-estree": "5.62.0",
237  |        "debug": "^4.3.4"
238  |      },
239  |      "engines": {
240  |        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
241  |      },
242  |      "funding": {
243  |        "type": "opencollective",
244  |        "url": "https://opencollective.com/typescript-eslint"
245  |      },
246  |      "peerDependencies": {
247  |        "eslint": "^6.0.0 || ^7.0.0 || ^8.0.0"
248  |      },
249  |      "peerDependenciesMeta": {
250  |        "typescript": {
251  |          "optional": true
252  |        }
253  |      }
254  |    },
255  |    "node_modules/@typescript-eslint/scope-manager": {
256  |      "version": "5.62.0",
257  |      "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-5.62.0.tgz",
258  |      "integrity": "sha512-VXuvVvZeQCQb5Zgf4HAxc04q5j+WrNAtNh9OwCsCgpKqESMTu3tF/jhZ3xG6T4NZwWl65Bg8KuS2uEvhSfLl0w==",
259  |      "dev": true,
260  |      "license": "MIT",
261  |      "dependencies": {
262  |        "@typescript-eslint/types": "5.62.0",
263  |        "@typescript-eslint/visitor-keys": "5.62.0"
264  |      },
265  |      "engines": {
266  |        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
267  |      },
268  |      "funding": {
269  |        "type": "opencollective",
270  |        "url": "https://opencollective.com/typescript-eslint"
271  |      }
272  |    },
273  |    "node_modules/@typescript-eslint/type-utils": {
274  |      "version": "5.62.0",
275  |      "resolved": "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-5.62.0.tgz",
276  |      "integrity": "sha512-xsSQreu+VnfbqQpW5vnCJdq1Z3Q0U31qiWmRhr98ONQmcp/yhiPJFPq8MXiJVLiksmOKSjIldZzkebzHuCGzew==",
277  |      "dev": true,
278  |      "license": "MIT",
279  |      "dependencies": {
280  |        "@typescript-eslint/typescript-estree": "5.62.0",
281  |        "@typescript-eslint/utils": "5.62.0",
282  |        "debug": "^4.3.4",
283  |        "tsutils": "^3.21.0"
284  |      },
285  |      "engines": {
286  |        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
287  |      },
288  |      "funding": {
289  |        "type": "opencollective",
290  |        "url": "https://opencollective.com/typescript-eslint"
291  |      },
292  |      "peerDependencies": {
293  |        "eslint": "*"
294  |      },
295  |      "peerDependenciesMeta": {
296  |        "typescript": {
297  |          "optional": true
298  |        }
299  |      }
300  |    },
301  |    "node_modules/@typescript-eslint/types": {
302  |      "version": "5.62.0",
303  |      "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-5.62.0.tgz",
304  |      "integrity": "sha512-87NVngcbVXUahrRTqIK27gD2t5Cu1yuCXxbLcFtCzZGlfyVWWh8mLHkoxzjsB6DDNnvdL+fW8MiwPEJyGJQDgQ==",
305  |      "dev": true,
306  |      "license": "MIT",
307  |      "engines": {
308  |        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
309  |      },
310  |      "funding": {
311  |        "type": "opencollective",
312  |        "url": "https://opencollective.com/typescript-eslint"
313  |      }
314  |    },
315  |    "node_modules/@typescript-eslint/typescript-estree": {
316  |      "version": "5.62.0",
317  |      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-5.62.0.tgz",
318  |      "integrity": "sha512-CmcQ6uY7b9y694lKdRB8FEel7JbU/40iSAPomu++SjLMntB+2Leay2LO6i8VnJk58MtE9/nQSFIH6jpyRWyYzA==",
319  |      "dev": true,
320  |      "license": "BSD-2-Clause",
321  |      "dependencies": {
322  |        "@typescript-eslint/types": "5.62.0",
323  |        "@typescript-eslint/visitor-keys": "5.62.0",
324  |        "debug": "^4.3.4",
325  |        "globby": "^11.1.0",
326  |        "is-glob": "^4.0.3",
327  |        "semver": "^7.3.7",
328  |        "tsutils": "^3.21.0"
329  |      },
330  |      "engines": {
331  |        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
332  |      },
333  |      "funding": {
334  |        "type": "opencollective",
335  |        "url": "https://opencollective.com/typescript-eslint"
336  |      },
337  |      "peerDependenciesMeta": {
338  |        "typescript": {
339  |          "optional": true
340  |        }
341  |      }
342  |    },
343  |    "node_modules/@typescript-eslint/utils": {
344  |      "version": "5.62.0",
345  |      "resolved": "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-5.62.0.tgz",
346  |      "integrity": "sha512-n8oxjeb5aIbPFEtmQxQYOLI0i9n5ySBEY/ZEHHZqKQSFnxio1rv6dthascc9dLuwrL0RC5mPCxB7vnAVGAYWAQ==",
347  |      "dev": true,
348  |      "license": "MIT",
349  |      "dependencies": {
350  |        "@eslint-community/eslint-utils": "^4.2.0",
351  |        "@types/json-schema": "^7.0.9",
352  |        "@types/semver": "^7.3.12",
353  |        "@typescript-eslint/scope-manager": "5.62.0",
354  |        "@typescript-eslint/types": "5.62.0",
355  |        "@typescript-eslint/typescript-estree": "5.62.0",
356  |        "eslint-scope": "^5.1.1",
357  |        "semver": "^7.3.7"
358  |      },
359  |      "engines": {
360  |        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
361  |      },
362  |      "funding": {
363  |        "type": "opencollective",
364  |        "url": "https://opencollective.com/typescript-eslint"
365  |      },
366  |      "peerDependencies": {
367  |        "eslint": "^6.0.0 || ^7.0.0 || ^8.0.0"
368  |      }
369  |    },
370  |    "node_modules/@typescript-eslint/visitor-keys": {
371  |      "version": "5.62.0",
372  |      "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-5.62.0.tgz",
373  |      "integrity": "sha512-07ny+LHRzQXepkGg6w0mFY41fVUNBrL2Roj/++7V1txKugfjm/Ci/qSND03r2RhlJhJYMcTn9AhhSSqQp0Ysyw==",
374  |      "dev": true,
375  |      "license": "MIT",
376  |      "dependencies": {
377  |        "@typescript-eslint/types": "5.62.0",
378  |        "eslint-visitor-keys": "^3.3.0"
379  |      },
380  |      "engines": {
381  |        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
382  |      },
383  |      "funding": {
384  |        "type": "opencollective",
385  |        "url": "https://opencollective.com/typescript-eslint"
386  |      }
387  |    },
388  |    "node_modules/@ungap/structured-clone": {
389  |      "version": "1.3.0",
390  |      "resolved": "https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.3.0.tgz",
391  |      "integrity": "sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==",
392  |      "dev": true,
393  |      "license": "ISC"
394  |    },
395  |    "node_modules/acorn": {
396  |      "version": "8.15.0",
397  |      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
398  |      "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
399  |      "dev": true,
400  |      "license": "MIT",
401  |      "bin": {
402  |        "acorn": "bin/acorn"
403  |      },
404  |      "engines": {
405  |        "node": ">=0.4.0"
406  |      }
407  |    },
408  |    "node_modules/acorn-jsx": {
409  |      "version": "5.3.2",
410  |      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
411  |      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
412  |      "dev": true,
413  |      "license": "MIT",
414  |      "peerDependencies": {
415  |        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
416  |      }
417  |    },
418  |    "node_modules/ajv": {
419  |      "version": "6.12.6",
420  |      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
421  |      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
422  |      "dev": true,
423  |      "license": "MIT",
424  |      "dependencies": {
425  |        "fast-deep-equal": "^3.1.1",
426  |        "fast-json-stable-stringify": "^2.0.0",
427  |        "json-schema-traverse": "^0.4.1",
428  |        "uri-js": "^4.2.2"
429  |      },
430  |      "funding": {
431  |        "type": "github",
432  |        "url": "https://github.com/sponsors/epoberezkin"
433  |      }
434  |    },
435  |    "node_modules/ansi-regex": {
436  |      "version": "5.0.1",
437  |      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
438  |      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
439  |      "dev": true,
440  |      "license": "MIT",
441  |      "engines": {
442  |        "node": ">=8"
443  |      }
444  |    },
445  |    "node_modules/ansi-styles": {
446  |      "version": "4.3.0",
447  |      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
448  |      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
449  |      "dev": true,
450  |      "license": "MIT",
451  |      "dependencies": {
452  |        "color-convert": "^2.0.1"
453  |      },
454  |      "engines": {
455  |        "node": ">=8"
456  |      },
457  |      "funding": {
458  |        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
459  |      }
460  |    },
461  |    "node_modules/argparse": {
462  |      "version": "2.0.1",
463  |      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
464  |      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
465  |      "dev": true,
466  |      "license": "Python-2.0"
467  |    },
468  |    "node_modules/array-union": {
469  |      "version": "2.1.0",
470  |      "resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
471  |      "integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==",
472  |      "dev": true,
473  |      "license": "MIT",
474  |      "engines": {
475  |        "node": ">=8"
476  |      }
477  |    },
478  |    "node_modules/balanced-match": {
479  |      "version": "1.0.2",
480  |      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
481  |      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
482  |      "dev": true,
483  |      "license": "MIT"
484  |    },
485  |    "node_modules/brace-expansion": {
486  |      "version": "1.1.12",
487  |      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
488  |      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
489  |      "dev": true,
490  |      "license": "MIT",
491  |      "dependencies": {
492  |        "balanced-match": "^1.0.0",
493  |        "concat-map": "0.0.1"
494  |      }
495  |    },
496  |    "node_modules/braces": {
497  |      "version": "3.0.3",
498  |      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
499  |      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
500  |      "dev": true,
501  |      "license": "MIT",
502  |      "dependencies": {
503  |        "fill-range": "^7.1.1"
504  |      },
505  |      "engines": {
506  |        "node": ">=8"
507  |      }
508  |    },
509  |    "node_modules/callsites": {
510  |      "version": "3.1.0",
511  |      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
512  |      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
513  |      "dev": true,
514  |      "license": "MIT",
515  |      "engines": {
516  |        "node": ">=6"
517  |      }
518  |    },
519  |    "node_modules/chalk": {
520  |      "version": "4.1.2",
521  |      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
522  |      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
523  |      "dev": true,
524  |      "license": "MIT",
525  |      "dependencies": {
526  |        "ansi-styles": "^4.1.0",
527  |        "supports-color": "^7.1.0"
528  |      },
529  |      "engines": {
530  |        "node": ">=10"
531  |      },
532  |      "funding": {
533  |        "url": "https://github.com/chalk/chalk?sponsor=1"
534  |      }
535  |    },
536  |    "node_modules/color-convert": {
537  |      "version": "2.0.1",
538  |      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
539  |      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
540  |      "dev": true,
541  |      "license": "MIT",
542  |      "dependencies": {
543  |        "color-name": "~1.1.4"
544  |      },
545  |      "engines": {
546  |        "node": ">=7.0.0"
547  |      }
548  |    },
549  |    "node_modules/color-name": {
550  |      "version": "1.1.4",
551  |      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
552  |      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
553  |      "dev": true,
554  |      "license": "MIT"
555  |    },
556  |    "node_modules/concat-map": {
557  |      "version": "0.0.1",
558  |      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
559  |      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
560  |      "dev": true,
561  |      "license": "MIT"
562  |    },
563  |    "node_modules/cross-spawn": {
564  |      "version": "7.0.6",
565  |      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
566  |      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
567  |      "dev": true,
568  |      "license": "MIT",
569  |      "dependencies": {
570  |        "path-key": "^3.1.0",
571  |        "shebang-command": "^2.0.0",
572  |        "which": "^2.0.1"
573  |      },
574  |      "engines": {
575  |        "node": ">= 8"
576  |      }
577  |    },
578  |    "node_modules/debug": {
579  |      "version": "4.4.1",
580  |      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
581  |      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
582  |      "dev": true,
583  |      "license": "MIT",
584  |      "dependencies": {
585  |        "ms": "^2.1.3"
586  |      },
587  |      "engines": {
588  |        "node": ">=6.0"
589  |      },
590  |      "peerDependenciesMeta": {
591  |        "supports-color": {
592  |          "optional": true
593  |        }
594  |      }
595  |    },
596  |    "node_modules/deep-is": {
597  |      "version": "0.1.4",
598  |      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
599  |      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
600  |      "dev": true,
601  |      "license": "MIT"
602  |    },
603  |    "node_modules/dir-glob": {
604  |      "version": "3.0.1",
605  |      "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz",
606  |      "integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==",
607  |      "dev": true,
608  |      "license": "MIT",
609  |      "dependencies": {
610  |        "path-type": "^4.0.0"
611  |      },
612  |      "engines": {
613  |        "node": ">=8"
614  |      }
615  |    },
616  |    "node_modules/doctrine": {
617  |      "version": "3.0.0",
618  |      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
619  |      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
620  |      "dev": true,
621  |      "license": "Apache-2.0",
622  |      "dependencies": {
623  |        "esutils": "^2.0.2"
624  |      },
625  |      "engines": {
626  |        "node": ">=6.0.0"
627  |      }
628  |    },
629  |    "node_modules/escape-string-regexp": {
630  |      "version": "4.0.0",
631  |      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
632  |      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
633  |      "dev": true,
634  |      "license": "MIT",
635  |      "engines": {
636  |        "node": ">=10"
637  |      },
638  |      "funding": {
639  |        "url": "https://github.com/sponsors/sindresorhus"
640  |      }
641  |    },
642  |    "node_modules/eslint": {
643  |      "version": "8.57.1",
644  |      "resolved": "https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz",
645  |      "integrity": "sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==",
646  |      "deprecated": "This version is no longer supported. Please see https://eslint.org/version-support for other options.",
647  |      "dev": true,
648  |      "license": "MIT",
649  |      "dependencies": {
650  |        "@eslint-community/eslint-utils": "^4.2.0",
651  |        "@eslint-community/regexpp": "^4.6.1",
652  |        "@eslint/eslintrc": "^2.1.4",
653  |        "@eslint/js": "8.57.1",
654  |        "@humanwhocodes/config-array": "^0.13.0",
655  |        "@humanwhocodes/module-importer": "^1.0.1",
656  |        "@nodelib/fs.walk": "^1.2.8",
657  |        "@ungap/structured-clone": "^1.2.0",
658  |        "ajv": "^6.12.4",
659  |        "chalk": "^4.0.0",
660  |        "cross-spawn": "^7.0.2",
661  |        "debug": "^4.3.2",
662  |        "doctrine": "^3.0.0",
663  |        "escape-string-regexp": "^4.0.0",
664  |        "eslint-scope": "^7.2.2",
665  |        "eslint-visitor-keys": "^3.4.3",
666  |        "espree": "^9.6.1",
667  |        "esquery": "^1.4.2",
668  |        "esutils": "^2.0.2",
669  |        "fast-deep-equal": "^3.1.3",
670  |        "file-entry-cache": "^6.0.1",
671  |        "find-up": "^5.0.0",
672  |        "glob-parent": "^6.0.2",
673  |        "globals": "^13.19.0",
674  |        "graphemer": "^1.4.0",
675  |        "ignore": "^5.2.0",
676  |        "imurmurhash": "^0.1.4",
677  |        "is-glob": "^4.0.0",
678  |        "is-path-inside": "^3.0.3",
679  |        "js-yaml": "^4.1.0",
680  |        "json-stable-stringify-without-jsonify": "^1.0.1",
681  |        "levn": "^0.4.1",
682  |        "lodash.merge": "^4.6.2",
683  |        "minimatch": "^3.1.2",
684  |        "natural-compare": "^1.4.0",
685  |        "optionator": "^0.9.3",
686  |        "strip-ansi": "^6.0.1",
687  |        "text-table": "^0.2.0"
688  |      },
689  |      "bin": {
690  |        "eslint": "bin/eslint.js"
691  |      },
692  |      "engines": {
693  |        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
694  |      },
695  |      "funding": {
696  |        "url": "https://opencollective.com/eslint"
697  |      }
698  |    },
699  |    "node_modules/eslint-scope": {
700  |      "version": "5.1.1",
701  |      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz",
702  |      "integrity": "sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==",
703  |      "dev": true,
704  |      "license": "BSD-2-Clause",
705  |      "dependencies": {
706  |        "esrecurse": "^4.3.0",
707  |        "estraverse": "^4.1.1"
708  |      },
709  |      "engines": {
710  |        "node": ">=8.0.0"
711  |      }
712  |    },
713  |    "node_modules/eslint-visitor-keys": {
714  |      "version": "3.4.3",
715  |      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
716  |      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
717  |      "dev": true,
718  |      "license": "Apache-2.0",
719  |      "engines": {
720  |        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
721  |      },
722  |      "funding": {
723  |        "url": "https://opencollective.com/eslint"
724  |      }
725  |    },
726  |    "node_modules/eslint/node_modules/eslint-scope": {
727  |      "version": "7.2.2",
728  |      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz",
729  |      "integrity": "sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==",
730  |      "dev": true,
731  |      "license": "BSD-2-Clause",
732  |      "dependencies": {
733  |        "esrecurse": "^4.3.0",
734  |        "estraverse": "^5.2.0"
735  |      },
736  |      "engines": {
737  |        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
738  |      },
739  |      "funding": {
740  |        "url": "https://opencollective.com/eslint"
741  |      }
742  |    },
743  |    "node_modules/eslint/node_modules/estraverse": {
744  |      "version": "5.3.0",
745  |      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
746  |      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
747  |      "dev": true,
748  |      "license": "BSD-2-Clause",
749  |      "engines": {
750  |        "node": ">=4.0"
751  |      }
752  |    },
753  |    "node_modules/espree": {
754  |      "version": "9.6.1",
755  |      "resolved": "https://registry.npmjs.org/espree/-/espree-9.6.1.tgz",
756  |      "integrity": "sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==",
757  |      "dev": true,
758  |      "license": "BSD-2-Clause",
759  |      "dependencies": {
760  |        "acorn": "^8.9.0",
761  |        "acorn-jsx": "^5.3.2",
762  |        "eslint-visitor-keys": "^3.4.1"
763  |      },
764  |      "engines": {
765  |        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
766  |      },
767  |      "funding": {
768  |        "url": "https://opencollective.com/eslint"
769  |      }
770  |    },
771  |    "node_modules/esquery": {
772  |      "version": "1.6.0",
773  |      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
774  |      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
775  |      "dev": true,
776  |      "license": "BSD-3-Clause",
777  |      "dependencies": {
778  |        "estraverse": "^5.1.0"
779  |      },
780  |      "engines": {
781  |        "node": ">=0.10"
782  |      }
783  |    },
784  |    "node_modules/esquery/node_modules/estraverse": {
785  |      "version": "5.3.0",
786  |      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
787  |      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
788  |      "dev": true,
789  |      "license": "BSD-2-Clause",
790  |      "engines": {
791  |        "node": ">=4.0"
792  |      }
793  |    },
794  |    "node_modules/esrecurse": {
795  |      "version": "4.3.0",
796  |      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
797  |      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
798  |      "dev": true,
799  |      "license": "BSD-2-Clause",
800  |      "dependencies": {
801  |        "estraverse": "^5.2.0"
802  |      },
803  |      "engines": {
804  |        "node": ">=4.0"
805  |      }
806  |    },
807  |    "node_modules/esrecurse/node_modules/estraverse": {
808  |      "version": "5.3.0",
809  |      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
810  |      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
811  |      "dev": true,
812  |      "license": "BSD-2-Clause",
813  |      "engines": {
814  |        "node": ">=4.0"
815  |      }
816  |    },
817  |    "node_modules/estraverse": {
818  |      "version": "4.3.0",
819  |      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
820  |      "integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==",
821  |      "dev": true,
822  |      "license": "BSD-2-Clause",
823  |      "engines": {
824  |        "node": ">=4.0"
825  |      }
826  |    },
827  |    "node_modules/esutils": {
828  |      "version": "2.0.3",
829  |      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
830  |      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
831  |      "dev": true,
832  |      "license": "BSD-2-Clause",
833  |      "engines": {
834  |        "node": ">=0.10.0"
835  |      }
836  |    },
837  |    "node_modules/fast-deep-equal": {
838  |      "version": "3.1.3",
839  |      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
840  |      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
841  |      "dev": true,
842  |      "license": "MIT"
843  |    },
844  |    "node_modules/fast-glob": {
845  |      "version": "3.3.3",
846  |      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
847  |      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
848  |      "dev": true,
849  |      "license": "MIT",
850  |      "dependencies": {
851  |        "@nodelib/fs.stat": "^2.0.2",
852  |        "@nodelib/fs.walk": "^1.2.3",
853  |        "glob-parent": "^5.1.2",
854  |        "merge2": "^1.3.0",
855  |        "micromatch": "^4.0.8"
856  |      },
857  |      "engines": {
858  |        "node": ">=8.6.0"
859  |      }
860  |    },
861  |    "node_modules/fast-glob/node_modules/glob-parent": {
862  |      "version": "5.1.2",
863  |      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
864  |      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
865  |      "dev": true,
866  |      "license": "ISC",
867  |      "dependencies": {
868  |        "is-glob": "^4.0.1"
869  |      },
870  |      "engines": {
871  |        "node": ">= 6"
872  |      }
873  |    },
874  |    "node_modules/fast-json-stable-stringify": {
875  |      "version": "2.1.0",
876  |      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
877  |      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
878  |      "dev": true,
879  |      "license": "MIT"
880  |    },
881  |    "node_modules/fast-levenshtein": {
882  |      "version": "2.0.6",
883  |      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
884  |      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
885  |      "dev": true,
886  |      "license": "MIT"
887  |    },
888  |    "node_modules/fastq": {
889  |      "version": "1.19.1",
890  |      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
891  |      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
892  |      "dev": true,
893  |      "license": "ISC",
894  |      "dependencies": {
895  |        "reusify": "^1.0.4"
896  |      }
897  |    },
898  |    "node_modules/file-entry-cache": {
899  |      "version": "6.0.1",
900  |      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz",
901  |      "integrity": "sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==",
902  |      "dev": true,
903  |      "license": "MIT",
904  |      "dependencies": {
905  |        "flat-cache": "^3.0.4"
906  |      },
907  |      "engines": {
908  |        "node": "^10.12.0 || >=12.0.0"
909  |      }
910  |    },
911  |    "node_modules/fill-range": {
912  |      "version": "7.1.1",
913  |      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
914  |      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
915  |      "dev": true,
916  |      "license": "MIT",
917  |      "dependencies": {
918  |        "to-regex-range": "^5.0.1"
919  |      },
920  |      "engines": {
921  |        "node": ">=8"
922  |      }
923  |    },
924  |    "node_modules/find-up": {
925  |      "version": "5.0.0",
926  |      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
927  |      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
928  |      "dev": true,
929  |      "license": "MIT",
930  |      "dependencies": {
931  |        "locate-path": "^6.0.0",
932  |        "path-exists": "^4.0.0"
933  |      },
934  |      "engines": {
935  |        "node": ">=10"
936  |      },
937  |      "funding": {
938  |        "url": "https://github.com/sponsors/sindresorhus"
939  |      }
940  |    },
941  |    "node_modules/flat-cache": {
942  |      "version": "3.2.0",
943  |      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz",
944  |      "integrity": "sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==",
945  |      "dev": true,
946  |      "license": "MIT",
947  |      "dependencies": {
948  |        "flatted": "^3.2.9",
949  |        "keyv": "^4.5.3",
950  |        "rimraf": "^3.0.2"
951  |      },
952  |      "engines": {
953  |        "node": "^10.12.0 || >=12.0.0"
954  |      }
955  |    },
956  |    "node_modules/flatted": {
957  |      "version": "3.3.3",
958  |      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
959  |      "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
960  |      "dev": true,
961  |      "license": "ISC"
962  |    },
963  |    "node_modules/fs.realpath": {
964  |      "version": "1.0.0",
965  |      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
966  |      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
967  |      "dev": true,
968  |      "license": "ISC"
969  |    },
970  |    "node_modules/glob": {
971  |      "version": "7.2.3",
972  |      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
973  |      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
974  |      "deprecated": "Glob versions prior to v9 are no longer supported",
975  |      "dev": true,
976  |      "license": "ISC",
977  |      "dependencies": {
978  |        "fs.realpath": "^1.0.0",
979  |        "inflight": "^1.0.4",
980  |        "inherits": "2",
981  |        "minimatch": "^3.1.1",
982  |        "once": "^1.3.0",
983  |        "path-is-absolute": "^1.0.0"
984  |      },
985  |      "engines": {
986  |        "node": "*"
987  |      },
988  |      "funding": {
989  |        "url": "https://github.com/sponsors/isaacs"
990  |      }
991  |    },
992  |    "node_modules/glob-parent": {
993  |      "version": "6.0.2",
994  |      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
995  |      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
996  |      "dev": true,
997  |      "license": "ISC",
998  |      "dependencies": {
999  |        "is-glob": "^4.0.3"
1000 |      },
1001 |      "engines": {
1002 |        "node": ">=10.13.0"
1003 |      }
1004 |    },
1005 |    "node_modules/globals": {
1006 |      "version": "13.24.0",
1007 |      "resolved": "https://registry.npmjs.org/globals/-/globals-13.24.0.tgz",
1008 |      "integrity": "sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==",
1009 |      "dev": true,
1010 |      "license": "MIT",
1011 |      "dependencies": {
1012 |        "type-fest": "^0.20.2"
1013 |      },
1014 |      "engines": {
1015 |        "node": ">=8"
1016 |      },
1017 |      "funding": {
1018 |        "url": "https://github.com/sponsors/sindresorhus"
1019 |      }
1020 |    },
1021 |    "node_modules/globby": {
1022 |      "version": "11.1.0",
1023 |      "resolved": "https://registry.npmjs.org/globby/-/globby-11.1.0.tgz",
1024 |      "integrity": "sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==",
1025 |      "dev": true,
1026 |      "license": "MIT",
1027 |      "dependencies": {
1028 |        "array-union": "^2.1.0",
1029 |        "dir-glob": "^3.0.1",
1030 |        "fast-glob": "^3.2.9",
1031 |        "ignore": "^5.2.0",
1032 |        "merge2": "^1.4.1",
1033 |        "slash": "^3.0.0"
1034 |      },
1035 |      "engines": {
1036 |        "node": ">=10"
1037 |      },
1038 |      "funding": {
1039 |        "url": "https://github.com/sponsors/sindresorhus"
1040 |      }
1041 |    },
1042 |    "node_modules/graphemer": {
1043 |      "version": "1.4.0",
1044 |      "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
1045 |      "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
1046 |      "dev": true,
1047 |      "license": "MIT"
1048 |    },
1049 |    "node_modules/has-flag": {
1050 |      "version": "4.0.0",
1051 |      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
1052 |      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
1053 |      "dev": true,
1054 |      "license": "MIT",
1055 |      "engines": {
1056 |        "node": ">=8"
1057 |      }
1058 |    },
1059 |    "node_modules/ignore": {
1060 |      "version": "5.3.2",
1061 |      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
1062 |      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
1063 |      "dev": true,
1064 |      "license": "MIT",
1065 |      "engines": {
1066 |        "node": ">= 4"
1067 |      }
1068 |    },
1069 |    "node_modules/import-fresh": {
1070 |      "version": "3.3.1",
1071 |      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
1072 |      "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
1073 |      "dev": true,
1074 |      "license": "MIT",
1075 |      "dependencies": {
1076 |        "parent-module": "^1.0.0",
1077 |        "resolve-from": "^4.0.0"
1078 |      },
1079 |      "engines": {
1080 |        "node": ">=6"
1081 |      },
1082 |      "funding": {
1083 |        "url": "https://github.com/sponsors/sindresorhus"
1084 |      }
1085 |    },
1086 |    "node_modules/imurmurhash": {
1087 |      "version": "0.1.4",
1088 |      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
1089 |      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
1090 |      "dev": true,
1091 |      "license": "MIT",
1092 |      "engines": {
1093 |        "node": ">=0.8.19"
1094 |      }
1095 |    },
1096 |    "node_modules/inflight": {
1097 |      "version": "1.0.6",
1098 |      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
1099 |      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
1100 |      "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
1101 |      "dev": true,
1102 |      "license": "ISC",
1103 |      "dependencies": {
1104 |        "once": "^1.3.0",
1105 |        "wrappy": "1"
1106 |      }
1107 |    },
1108 |    "node_modules/inherits": {
1109 |      "version": "2.0.4",
1110 |      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
1111 |      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
1112 |      "dev": true,
1113 |      "license": "ISC"
1114 |    },
1115 |    "node_modules/is-extglob": {
1116 |      "version": "2.1.1",
1117 |      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
1118 |      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
1119 |      "dev": true,
1120 |      "license": "MIT",
1121 |      "engines": {
1122 |        "node": ">=0.10.0"
1123 |      }
1124 |    },
1125 |    "node_modules/is-glob": {
1126 |      "version": "4.0.3",
1127 |      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
1128 |      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
1129 |      "dev": true,
1130 |      "license": "MIT",
1131 |      "dependencies": {
1132 |        "is-extglob": "^2.1.1"
1133 |      },
1134 |      "engines": {
1135 |        "node": ">=0.10.0"
1136 |      }
1137 |    },
1138 |    "node_modules/is-number": {
1139 |      "version": "7.0.0",
1140 |      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
1141 |      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
1142 |      "dev": true,
1143 |      "license": "MIT",
1144 |      "engines": {
1145 |        "node": ">=0.12.0"
1146 |      }
1147 |    },
1148 |    "node_modules/is-path-inside": {
1149 |      "version": "3.0.3",
1150 |      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
1151 |      "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
1152 |      "dev": true,
1153 |      "license": "MIT",
1154 |      "engines": {
1155 |        "node": ">=8"
1156 |      }
1157 |    },
1158 |    "node_modules/isexe": {
1159 |      "version": "2.0.0",
1160 |      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
1161 |      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
1162 |      "dev": true,
1163 |      "license": "ISC"
1164 |    },
1165 |    "node_modules/js-yaml": {
1166 |      "version": "4.1.0",
1167 |      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
1168 |      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
1169 |      "dev": true,
1170 |      "license": "MIT",
1171 |      "dependencies": {
1172 |        "argparse": "^2.0.1"
1173 |      },
1174 |      "bin": {
1175 |        "js-yaml": "bin/js-yaml.js"
1176 |      }
1177 |    },
1178 |    "node_modules/json-buffer": {
1179 |      "version": "3.0.1",
1180 |      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
1181 |      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
1182 |      "dev": true,
1183 |      "license": "MIT"
1184 |    },
1185 |    "node_modules/json-schema-traverse": {
1186 |      "version": "0.4.1",
1187 |      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
1188 |      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
1189 |      "dev": true,
1190 |      "license": "MIT"
1191 |    },
1192 |    "node_modules/json-stable-stringify-without-jsonify": {
1193 |      "version": "1.0.1",
1194 |      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
1195 |      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
1196 |      "dev": true,
1197 |      "license": "MIT"
1198 |    },
1199 |    "node_modules/keyv": {
1200 |      "version": "4.5.4",
1201 |      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
1202 |      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
1203 |      "dev": true,
1204 |      "license": "MIT",
1205 |      "dependencies": {
1206 |        "json-buffer": "3.0.1"
1207 |      }
1208 |    },
1209 |    "node_modules/levn": {
1210 |      "version": "0.4.1",
1211 |      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
1212 |      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
1213 |      "dev": true,
1214 |      "license": "MIT",
1215 |      "dependencies": {
1216 |        "prelude-ls": "^1.2.1",
1217 |        "type-check": "~0.4.0"
1218 |      },
1219 |      "engines": {
1220 |        "node": ">= 0.8.0"
1221 |      }
1222 |    },
1223 |    "node_modules/locate-path": {
1224 |      "version": "6.0.0",
1225 |      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
1226 |      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
1227 |      "dev": true,
1228 |      "license": "MIT",
1229 |      "dependencies": {
1230 |        "p-locate": "^5.0.0"
1231 |      },
1232 |      "engines": {
1233 |        "node": ">=10"
1234 |      },
1235 |      "funding": {
1236 |        "url": "https://github.com/sponsors/sindresorhus"
1237 |      }
1238 |    },
1239 |    "node_modules/lodash.merge": {
1240 |      "version": "4.6.2",
1241 |      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
1242 |      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
1243 |      "dev": true,
1244 |      "license": "MIT"
1245 |    },
1246 |    "node_modules/merge2": {
1247 |      "version": "1.4.1",
1248 |      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
1249 |      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
1250 |      "dev": true,
1251 |      "license": "MIT",
1252 |      "engines": {
1253 |        "node": ">= 8"
1254 |      }
1255 |    },
1256 |    "node_modules/micromatch": {
1257 |      "version": "4.0.8",
1258 |      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
1259 |      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
1260 |      "dev": true,
1261 |      "license": "MIT",
1262 |      "dependencies": {
1263 |        "braces": "^3.0.3",
1264 |        "picomatch": "^2.3.1"
1265 |      },
1266 |      "engines": {
1267 |        "node": ">=8.6"
1268 |      }
1269 |    },
1270 |    "node_modules/minimatch": {
1271 |      "version": "3.1.2",
1272 |      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
1273 |      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
1274 |      "dev": true,
1275 |      "license": "ISC",
1276 |      "dependencies": {
1277 |        "brace-expansion": "^1.1.7"
1278 |      },
1279 |      "engines": {
1280 |        "node": "*"
1281 |      }
1282 |    },
1283 |    "node_modules/ms": {
1284 |      "version": "2.1.3",
1285 |      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
1286 |      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
1287 |      "dev": true,
1288 |      "license": "MIT"
1289 |    },
1290 |    "node_modules/natural-compare": {
1291 |      "version": "1.4.0",
1292 |      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
1293 |      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
1294 |      "dev": true,
1295 |      "license": "MIT"
1296 |    },
1297 |    "node_modules/natural-compare-lite": {
1298 |      "version": "1.4.0",
1299 |      "resolved": "https://registry.npmjs.org/natural-compare-lite/-/natural-compare-lite-1.4.0.tgz",
1300 |      "integrity": "sha512-Tj+HTDSJJKaZnfiuw+iaF9skdPpTo2GtEly5JHnWV/hfv2Qj/9RKsGISQtLh2ox3l5EAGw487hnBee0sIJ6v2g==",
1301 |      "dev": true,
1302 |      "license": "MIT"
1303 |    },
1304 |    "node_modules/once": {
1305 |      "version": "1.4.0",
1306 |      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
1307 |      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
1308 |      "dev": true,
1309 |      "license": "ISC",
1310 |      "dependencies": {
1311 |        "wrappy": "1"
1312 |      }
1313 |    },
1314 |    "node_modules/optionator": {
1315 |      "version": "0.9.4",
1316 |      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
1317 |      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
1318 |      "dev": true,
1319 |      "license": "MIT",
1320 |      "dependencies": {
1321 |        "deep-is": "^0.1.3",
1322 |        "fast-levenshtein": "^2.0.6",
1323 |        "levn": "^0.4.1",
1324 |        "prelude-ls": "^1.2.1",
1325 |        "type-check": "^0.4.0",
1326 |        "word-wrap": "^1.2.5"
1327 |      },
1328 |      "engines": {
1329 |        "node": ">= 0.8.0"
1330 |      }
1331 |    },
1332 |    "node_modules/p-limit": {
1333 |      "version": "3.1.0",
1334 |      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
1335 |      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
1336 |      "dev": true,
1337 |      "license": "MIT",
1338 |      "dependencies": {
1339 |        "yocto-queue": "^0.1.0"
1340 |      },
1341 |      "engines": {
1342 |        "node": ">=10"
1343 |      },
1344 |      "funding": {
1345 |        "url": "https://github.com/sponsors/sindresorhus"
1346 |      }
1347 |    },
1348 |    "node_modules/p-locate": {
1349 |      "version": "5.0.0",
1350 |      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
1351 |      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
1352 |      "dev": true,
1353 |      "license": "MIT",
1354 |      "dependencies": {
1355 |        "p-limit": "^3.0.2"
1356 |      },
1357 |      "engines": {
1358 |        "node": ">=10"
1359 |      },
1360 |      "funding": {
1361 |        "url": "https://github.com/sponsors/sindresorhus"
1362 |      }
1363 |    },
1364 |    "node_modules/parent-module": {
1365 |      "version": "1.0.1",
1366 |      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
1367 |      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
1368 |      "dev": true,
1369 |      "license": "MIT",
1370 |      "dependencies": {
1371 |        "callsites": "^3.0.0"
1372 |      },
1373 |      "engines": {
1374 |        "node": ">=6"
1375 |      }
1376 |    },
1377 |    "node_modules/path-exists": {
1378 |      "version": "4.0.0",
1379 |      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
1380 |      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
1381 |      "dev": true,
1382 |      "license": "MIT",
1383 |      "engines": {
1384 |        "node": ">=8"
1385 |      }
1386 |    },
1387 |    "node_modules/path-is-absolute": {
1388 |      "version": "1.0.1",
1389 |      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
1390 |      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
1391 |      "dev": true,
1392 |      "license": "MIT",
1393 |      "engines": {
1394 |        "node": ">=0.10.0"
1395 |      }
1396 |    },
1397 |    "node_modules/path-key": {
1398 |      "version": "3.1.1",
1399 |      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
1400 |      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
1401 |      "dev": true,
1402 |      "license": "MIT",
1403 |      "engines": {
1404 |        "node": ">=8"
1405 |      }
1406 |    },
1407 |    "node_modules/path-type": {
1408 |      "version": "4.0.0",
1409 |      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
1410 |      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
1411 |      "dev": true,
1412 |      "license": "MIT",
1413 |      "engines": {
1414 |        "node": ">=8"
1415 |      }
1416 |    },
1417 |    "node_modules/picomatch": {
1418 |      "version": "2.3.1",
1419 |      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
1420 |      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
1421 |      "dev": true,
1422 |      "license": "MIT",
1423 |      "engines": {
1424 |        "node": ">=8.6"
1425 |      },
1426 |      "funding": {
1427 |        "url": "https://github.com/sponsors/jonschlinkert"
1428 |      }
1429 |    },
1430 |    "node_modules/prelude-ls": {
1431 |      "version": "1.2.1",
1432 |      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
1433 |      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
1434 |      "dev": true,
1435 |      "license": "MIT",
1436 |      "engines": {
1437 |        "node": ">= 0.8.0"
1438 |      }
1439 |    },
1440 |    "node_modules/punycode": {
1441 |      "version": "2.3.1",
1442 |      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
1443 |      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
1444 |      "dev": true,
1445 |      "license": "MIT",
1446 |      "engines": {
1447 |        "node": ">=6"
1448 |      }
1449 |    },
1450 |    "node_modules/queue-microtask": {
1451 |      "version": "1.2.3",
1452 |      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
1453 |      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
1454 |      "dev": true,
1455 |      "funding": [
1456 |        {
1457 |          "type": "github",
1458 |          "url": "https://github.com/sponsors/feross"
1459 |        },
1460 |        {
1461 |          "type": "patreon",
1462 |          "url": "https://www.patreon.com/feross"
1463 |        },
1464 |        {
1465 |          "type": "consulting",
1466 |          "url": "https://feross.org/support"
1467 |        }
1468 |      ],
1469 |      "license": "MIT"
1470 |    },
1471 |    "node_modules/resolve-from": {
1472 |      "version": "4.0.0",
1473 |      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
1474 |      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
1475 |      "dev": true,
1476 |      "license": "MIT",
1477 |      "engines": {
1478 |        "node": ">=4"
1479 |      }
1480 |    },
1481 |    "node_modules/reusify": {
1482 |      "version": "1.1.0",
1483 |      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
1484 |      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
1485 |      "dev": true,
1486 |      "license": "MIT",
1487 |      "engines": {
1488 |        "iojs": ">=1.0.0",
1489 |        "node": ">=0.10.0"
1490 |      }
1491 |    },
1492 |    "node_modules/rimraf": {
1493 |      "version": "3.0.2",
1494 |      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
1495 |      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
1496 |      "deprecated": "Rimraf versions prior to v4 are no longer supported",
1497 |      "dev": true,
1498 |      "license": "ISC",
1499 |      "dependencies": {
1500 |        "glob": "^7.1.3"
1501 |      },
1502 |      "bin": {
1503 |        "rimraf": "bin.js"
1504 |      },
1505 |      "funding": {
1506 |        "url": "https://github.com/sponsors/isaacs"
1507 |      }
1508 |    },
1509 |    "node_modules/run-parallel": {
1510 |      "version": "1.2.0",
1511 |      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
1512 |      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
1513 |      "dev": true,
1514 |      "funding": [
1515 |        {
1516 |          "type": "github",
1517 |          "url": "https://github.com/sponsors/feross"
1518 |        },
1519 |        {
1520 |          "type": "patreon",
1521 |          "url": "https://www.patreon.com/feross"
1522 |        },
1523 |        {
1524 |          "type": "consulting",
1525 |          "url": "https://feross.org/support"
1526 |        }
1527 |      ],
1528 |      "license": "MIT",
1529 |      "dependencies": {
1530 |        "queue-microtask": "^1.2.2"
1531 |      }
1532 |    },
1533 |    "node_modules/semver": {
1534 |      "version": "7.7.2",
1535 |      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
1536 |      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
1537 |      "dev": true,
1538 |      "license": "ISC",
1539 |      "bin": {
1540 |        "semver": "bin/semver.js"
1541 |      },
1542 |      "engines": {
1543 |        "node": ">=10"
1544 |      }
1545 |    },
1546 |    "node_modules/shebang-command": {
1547 |      "version": "2.0.0",
1548 |      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
1549 |      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
1550 |      "dev": true,
1551 |      "license": "MIT",
1552 |      "dependencies": {
1553 |        "shebang-regex": "^3.0.0"
1554 |      },
1555 |      "engines": {
1556 |        "node": ">=8"
1557 |      }
1558 |    },
1559 |    "node_modules/shebang-regex": {
1560 |      "version": "3.0.0",
1561 |      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
1562 |      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
1563 |      "dev": true,
1564 |      "license": "MIT",
1565 |      "engines": {
1566 |        "node": ">=8"
1567 |      }
1568 |    },
1569 |    "node_modules/slash": {
1570 |      "version": "3.0.0",
1571 |      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
1572 |      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
1573 |      "dev": true,
1574 |      "license": "MIT",
1575 |      "engines": {
1576 |        "node": ">=8"
1577 |      }
1578 |    },
1579 |    "node_modules/strip-ansi": {
1580 |      "version": "6.0.1",
1581 |      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
1582 |      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
1583 |      "dev": true,
1584 |      "license": "MIT",
1585 |      "dependencies": {
1586 |        "ansi-regex": "^5.0.1"
1587 |      },
1588 |      "engines": {
1589 |        "node": ">=8"
1590 |      }
1591 |    },
1592 |    "node_modules/strip-json-comments": {
1593 |      "version": "3.1.1",
1594 |      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
1595 |      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
1596 |      "dev": true,
1597 |      "license": "MIT",
1598 |      "engines": {
1599 |        "node": ">=8"
1600 |      },
1601 |      "funding": {
1602 |        "url": "https://github.com/sponsors/sindresorhus"
1603 |      }
1604 |    },
1605 |    "node_modules/supports-color": {
1606 |      "version": "7.2.0",
1607 |      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
1608 |      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
1609 |      "dev": true,
1610 |      "license": "MIT",
1611 |      "dependencies": {
1612 |        "has-flag": "^4.0.0"
1613 |      },
1614 |      "engines": {
1615 |        "node": ">=8"
1616 |      }
1617 |    },
1618 |    "node_modules/text-table": {
1619 |      "version": "0.2.0",
1620 |      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
1621 |      "integrity": "sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==",
1622 |      "dev": true,
1623 |      "license": "MIT"
1624 |    },
1625 |    "node_modules/to-regex-range": {
1626 |      "version": "5.0.1",
1627 |      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
1628 |      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
1629 |      "dev": true,
1630 |      "license": "MIT",
1631 |      "dependencies": {
1632 |        "is-number": "^7.0.0"
1633 |      },
1634 |      "engines": {
1635 |        "node": ">=8.0"
1636 |      }
1637 |    },
1638 |    "node_modules/tslib": {
1639 |      "version": "1.14.1",
1640 |      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
1641 |      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
1642 |      "dev": true,
1643 |      "license": "0BSD"
1644 |    },
1645 |    "node_modules/tsutils": {
1646 |      "version": "3.21.0",
1647 |      "resolved": "https://registry.npmjs.org/tsutils/-/tsutils-3.21.0.tgz",
1648 |      "integrity": "sha512-mHKK3iUXL+3UF6xL5k0PEhKRUBKPBCv/+RkEOpjRWxxx27KKRBmmA60A9pgOUvMi8GKhRMPEmjBRPzs2W7O1OA==",
1649 |      "dev": true,
1650 |      "license": "MIT",
1651 |      "dependencies": {
1652 |        "tslib": "^1.8.1"
1653 |      },
1654 |      "engines": {
1655 |        "node": ">= 6"
1656 |      },
1657 |      "peerDependencies": {
1658 |        "typescript": ">=2.8.0 || >= 3.2.0-dev || >= 3.3.0-dev || >= 3.4.0-dev || >= 3.5.0-dev || >= 3.6.0-dev || >= 3.6.0-beta || >= 3.7.0-dev || >= 3.7.0-beta"
1659 |      }
1660 |    },
1661 |    "node_modules/type-check": {
1662 |      "version": "0.4.0",
1663 |      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
1664 |      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
1665 |      "dev": true,
1666 |      "license": "MIT",
1667 |      "dependencies": {
1668 |        "prelude-ls": "^1.2.1"
1669 |      },
1670 |      "engines": {
1671 |        "node": ">= 0.8.0"
1672 |      }
1673 |    },
1674 |    "node_modules/type-fest": {
1675 |      "version": "0.20.2",
1676 |      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
1677 |      "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
1678 |      "dev": true,
1679 |      "license": "(MIT OR CC0-1.0)",
1680 |      "engines": {
1681 |        "node": ">=10"
1682 |      },
1683 |      "funding": {
1684 |        "url": "https://github.com/sponsors/sindresorhus"
1685 |      }
1686 |    },
1687 |    "node_modules/typescript": {
1688 |      "version": "5.9.2",
1689 |      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.9.2.tgz",
1690 |      "integrity": "sha512-CWBzXQrc/qOkhidw1OzBTQuYRbfyxDXJMVJ1XNwUHGROVmuaeiEm3OslpZ1RV96d7SKKjZKrSJu3+t/xlw3R9A==",
1691 |      "dev": true,
1692 |      "license": "Apache-2.0",
1693 |      "bin": {
1694 |        "tsc": "bin/tsc",
1695 |        "tsserver": "bin/tsserver"
1696 |      },
1697 |      "engines": {
1698 |        "node": ">=14.17"
1699 |      }
1700 |    },
1701 |    "node_modules/undici-types": {
1702 |      "version": "5.26.5",
1703 |      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-5.26.5.tgz",
1704 |      "integrity": "sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==",
1705 |      "dev": true,
1706 |      "license": "MIT"
1707 |    },
1708 |    "node_modules/uri-js": {
1709 |      "version": "4.4.1",
1710 |      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
1711 |      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
1712 |      "dev": true,
1713 |      "license": "BSD-2-Clause",
1714 |      "dependencies": {
1715 |        "punycode": "^2.1.0"
1716 |      }
1717 |    },
1718 |    "node_modules/which": {
1719 |      "version": "2.0.2",
1720 |      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
1721 |      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
1722 |      "dev": true,
1723 |      "license": "ISC",
1724 |      "dependencies": {
1725 |        "isexe": "^2.0.0"
1726 |      },
1727 |      "bin": {
1728 |        "node-which": "bin/node-which"
1729 |      },
1730 |      "engines": {
1731 |        "node": ">= 8"
1732 |      }
1733 |    },
1734 |    "node_modules/word-wrap": {
1735 |      "version": "1.2.5",
1736 |      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
1737 |      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
1738 |      "dev": true,
1739 |      "license": "MIT",
1740 |      "engines": {
1741 |        "node": ">=0.10.0"
1742 |      }
1743 |    },
1744 |    "node_modules/wrappy": {
1745 |      "version": "1.0.2",
1746 |      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
1747 |      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
1748 |      "dev": true,
1749 |      "license": "ISC"
1750 |    },
1751 |    "node_modules/yocto-queue": {
1752 |      "version": "0.1.0",
1753 |      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
1754 |      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
1755 |      "dev": true,
1756 |      "license": "MIT",
1757 |      "engines": {
1758 |        "node": ">=10"
1759 |      },
1760 |      "funding": {
1761 |        "url": "https://github.com/sponsors/sindresorhus"
1762 |      }
1763 |    }
1764 |  }
1765 |}
--- File End ---

File Path: package.json
--- File Start ---
1    |{
2    |  "name": "changelayers",
3    |  "displayName": "Change Layers",
4    |  "description": "Manage and diff sequential, uncommitted change sets as layers.",
5    |  "version": "0.0.1",
6    |  "engines": {
7    |    "vscode": "^1.80.0"
8    |  },
9    |  "categories": [
10   |    "Other"
11   |  ],
12   |  "activationEvents": [
13   |    "onView:changeLayersView"
14   |  ],
15   |  "main": "./out/extension.js",
16   |  "contributes": {
17   |    "commands": [
18   |      {
19   |        "command": "changelayers.snapshot",
20   |        "title": "Snapshot as New Layer",
21   |        "icon": "$(add)"
22   |      },
23   |      {
24   |        "command": "changelayers.refresh",
25   |        "title": "Refresh",
26   |        "icon": "$(refresh)"
27   |      },
28   |      {
29   |        "command": "changelayers.showDiff",
30   |        "title": "Show Layer-on-Layer Diff"
31   |      },
32   |      {
33   |        "command": "changelayers.discardFile",
34   |        "title": "Revert File to Previous Layer",
35   |        "icon": "$(discard)"
36   |      },
37   |      {
38   |        "command": "changelayers.discard",
39   |        "title": "Discard Layer",
40   |        "icon": "$(trash)"
41   |      },
42   |      {
43   |        "command": "changelayers.discardAll",
44   |        "title": "Discard All Layers",
45   |        "icon": "$(clear-all)"
46   |      }
47   |    ],
48   |    "viewsContainers": {
49   |      "activitybar": [
50   |        {
51   |          "id": "change-layers-container",
52   |          "title": "Change Layers",
53   |          "icon": "$(layers)"
54   |        }
55   |      ]
56   |    },
57   |    "views": {
58   |      "change-layers-container": [
59   |        {
60   |          "id": "changeLayersView",
61   |          "name": "Layers",
62   |          "icon": "$(layers)",
63   |          "contextualTitle": "Change Layers"
64   |        }
65   |      ]
66   |    },
67   |    "menus": {
68   |      "view/title": [
69   |        {
70   |          "command": "changelayers.snapshot",
71   |          "when": "view == changeLayersView",
72   |          "group": "navigation"
73   |        },
74   |        {
75   |          "command": "changelayers.discardAll",
76   |          "when": "view == changeLayersView",
77   |          "group": "navigation"
78   |        },
79   |        {
80   |          "command": "changelayers.refresh",
81   |          "when": "view == changeLayersView",
82   |          "group": "navigation"
83   |        }
84   |      ],
85   |      "view/item/context": [
86   |        {
87   |          "command": "changelayers.discard",
88   |          "when": "view == changeLayersView && viewItem == layer",
89   |          "group": "inline@1"
90   |        },
91   |        {
92   |            "command": "changelayers.discardFile",
93   |            "when": "view == changeLayersView && viewItem == layerFile",
94   |            "group": "inline@1"
95   |        }
96   |      ]
97   |    }
98   |  },
99   |  "scripts": {
100  |    "vscode:prepublish": "npm run compile",
101  |    "compile": "tsc -p ./",
102  |    "watch": "tsc -watch -p ./",
103  |    "lint": "eslint src --ext ts"
104  |  },
105  |  "devDependencies": {
106  |    "@types/vscode": "^1.80.0",
107  |    "@types/node": "18.x",
108  |    "@typescript-eslint/eslint-plugin": "^5.62.0",
109  |    "@typescript-eslint/parser": "^5.62.0",
110  |    "eslint": "^8.46.0",
111  |    "typescript": "^5.1.6"
112  |  }
113  |}
--- File End ---

File Path: README.md
--- File Start ---
1    |# Change Layers VS Code Extension
2    |
3    |This extension provides a way to manage sequential sets of uncommitted changes in "Layers". You can create snapshots of your staged changes and view the difference between each layer.
4    |
5    |## Features
6    |
7    |*   **Snapshot Staged Changes**: Create a "Layer" from your currently staged changes.
8    |*   **Layered Diffs**: View the changes introduced in one layer relative to the previous one.
9    |*   **Discard Layers**: Easily discard a set of changes.
10   |
11   |## How to Use
12   |
13   |1.  Open the "Change Layers" view from the Activity Bar.
14   |2.  Stage some changes using the regular Git Source Control view.
15   |3.  Click the `+` icon in the "Layers" view title bar to create a new layer snapshot.
16   |4.  As you create more layers, you can click on the files within each layer to see the diff between it and the state after the previous layer was applied.
17   |
18   |## Commands
19   |
20   |*   `Change Layers: Snapshot Staged Changes as New Layer`: Creates a layer from staged changes.
21   |*   `Change Layers: Discard Layer`: Removes a selected layer.
22   |*   `Change Layers: Discard All Layers`: Removes all layers.
23   |*   `Change Layers: Refresh`: Refreshes the layer view.
24   |
25   |This is a proof-of-concept extension.
--- File End ---

File Path: src/extension.ts
--- File Start ---
1    |import * as vscode from 'vscode';
2    |import { LayerProvider } from './LayerProvider';
3    |import { Layer, LayerFile } from './Layer';
4    |import { Git } from './Git';
5    |import * as fs from 'fs';
6    |import * as path from 'path';
7    |import { ReadonlyContentProvider } from './ReadonlyContentProvider';
8    |
9    |export function activate(context: vscode.ExtensionContext) {
10   |
11   |    console.log('Congratulations, your extension "changelayers" is now active!');
12   |
13   |    const git = new Git();
14   |    const layerProvider = new LayerProvider(context, git);
15   |    const readonlyProvider = new ReadonlyContentProvider(git);
16   |
17   |    context.subscriptions.push(vscode.workspace.registerTextDocumentContentProvider('changelayer-readonly', readonlyProvider));
18   |    vscode.window.registerTreeDataProvider('changeLayersView', layerProvider);
19   |
20   |    context.subscriptions.push(vscode.commands.registerCommand('changelayers.refresh', () => {
21   |        layerProvider.refresh();
22   |    }));
23   |
24   |    context.subscriptions.push(vscode.commands.registerCommand('changelayers.snapshot', async () => {
25   |        // Generate a layer name from the current date and time.
26   |        const layerName = new Date().toLocaleString();
27   |        try {
28   |            await layerProvider.createLayer(layerName);
29   |            vscode.window.showInformationMessage(`Layer "${layerName}" created.`);
30   |            layerProvider.refresh();
31   |        } catch (error: any) {
32   |            vscode.window.showErrorMessage(`Failed to create layer: ${error.message}`);
33   |        }
34   |    }));
35   |
36   |    context.subscriptions.push(vscode.commands.registerCommand('changelayers.showDiff', async (layer: Layer, filePath: string) => {
37   |        try {
38   |            const uris = await layerProvider.getDiffUris(layer, filePath);
39   |            if (uris) {
40   |                const { left, right } = uris;
41   |                const title = `${path.basename(filePath)} (${layer.getPreviousLayerName()} vs ${layer.label})`;
42   |                // The preserveFocus option keeps the focus on the tree view, making the selection highlight stay prominent.
43   |                await vscode.commands.executeCommand('vscode.diff', left, right, title, { preserveFocus: true });
44   |            }
45   |        } catch (error: any) {
46   |            vscode.window.showErrorMessage(`Could not show diff: ${error.message}`);
47   |        }
48   |    }));
49   |
50   |    context.subscriptions.push(vscode.commands.registerCommand('changelayers.discardFile', async (file: LayerFile) => {
51   |        const confirm = await vscode.window.showWarningMessage(
52   |            `Are you sure you want to revert "${file.label}" to its state before layer "${file.layer.label}"?`,
53   |            { modal: true },
54   |            'Revert'
55   |        );
56   |        if (confirm === 'Revert') {
57   |            await layerProvider.revertFile(file);
58   |            vscode.window.showInformationMessage(`Reverted "${file.label}".`);
59   |            layerProvider.refresh();
60   |        }
61   |    }));
62   |
63   |    context.subscriptions.push(vscode.commands.registerCommand('changelayers.discard', async (layer: Layer) => {
64   |        const confirm = await vscode.window.showWarningMessage(
65   |            `Are you sure you want to discard the layer "${layer.label}"? This is not reversible.`,
66   |            { modal: true },
67   |            'Discard'
68   |        );
69   |        if (confirm === 'Discard') {
70   |            await layerProvider.discardLayer(layer.id);
71   |            layerProvider.refresh();
72   |            vscode.window.showInformationMessage(`Layer "${layer.label}" discarded.`);
73   |        }
74   |    }));
75   |
76   |    context.subscriptions.push(vscode.commands.registerCommand('changelayers.discardAll', async () => {
77   |        const confirm = await vscode.window.showWarningMessage(
78   |            `Are you sure you want to discard ALL layers? This is not reversible.`,
79   |            { modal: true },
80   |            'Discard All'
81   |        );
82   |        if (confirm === 'Discard All') {
83   |            await layerProvider.discardAllLayers();
84   |            layerProvider.refresh();
85   |            vscode.window.showInformationMessage('All layers have been discarded.');
86   |        }
87   |    }));
88   |}
89   |
90   |export function deactivate() {}
--- File End ---

File Path: src/Git.ts
--- File Start ---
1    |import * as vscode from 'vscode';
2    |import { exec } from 'child_process';
3    |import * as path from 'path';
4    |import * as fs from 'fs';
5    |
6    |export class Git {
7    |    private repoRoot: string | null = null;
8    |
9    |    constructor() {
10   |        this.findRepoRoot();
11   |    }
12   |
13   |    private async execute(command: string): Promise<string> {
14   |        return new Promise((resolve, reject) => {
15   |            if (!this.repoRoot) {
16   |                return reject(new Error("Not in a git repository."));
17   |            }
18   |            exec(command, { cwd: this.repoRoot }, (error, stdout, stderr) => {
19   |                if (error) {
20   |                    return reject(new Error(`Git command failed: ${stderr || error.message}`));
21   |                }
22   |                // Do NOT trim the output here. Trimming can corrupt patch files.
23   |                // Callers are responsible for processing the raw output.
24   |                resolve(stdout);
25   |            });
26   |        });
27   |    }
28   |
29   |    private findRepoRoot() {
30   |        const workspaceFolders = vscode.workspace.workspaceFolders;
31   |        if (workspaceFolders && workspaceFolders.length > 0) {
32   |            this.repoRoot = workspaceFolders[0].uri.fsPath; // Simplification: assumes first folder is root
33   |        }
34   |    }
35   |
36   |    public getRepoRoot(): string {
37   |        if (!this.repoRoot) {
38   |            throw new Error("Could not find git repository root.");
39   |        }
40   |        return this.repoRoot;
41   |    }
42   |
43   |    public async checkIsRepo(): Promise<void> {
44   |        try {
45   |            await this.execute('git rev-parse --is-inside-work-tree');
46   |        } catch (error) {
47   |            throw new Error("The current workspace is not a git repository.");
48   |        }
49   |    }
50   |
51   |    public async getChangedFiles(): Promise<string[]> {
52   |        // This gets all changed files (staged and unstaged)
53   |        const output = await this.execute('git diff --name-only HEAD');
54   |        const trimmedOutput = output.trim();
55   |        return trimmedOutput ? trimmedOutput.split('\n') : [];
56   |    }
57   |
58   |    public async getFileContentAtHead(filePath: string): Promise<string> {
59   |        try {
60   |            return await this.execute(`git show HEAD:"${filePath}"`);
61   |        } catch (error) {
62   |            // File likely didn't exist at HEAD, which is a valid state
63   |            return '';
64   |        }
65   |    }
66   |
67   |    public async checkoutFiles(files: string[]): Promise<void> {
68   |        if (files.length === 0) {
69   |            return;
70   |        }
71   |        // Quote files to handle paths with spaces
72   |        const quotedFiles = files.map(f => `"${f}"`).join(' ');
73   |        await this.execute(`git checkout -- ${quotedFiles}`);
74   |    }
75   |}
--- File End ---

File Path: src/Layer.ts
--- File Start ---
1    |import * as vscode from 'vscode';
2    |import * as path from 'path';
3    |
4    |export class Layer extends vscode.TreeItem {
5    |    constructor(
6    |        public readonly label: string,
7    |        public readonly id: string,
8    |        public readonly timestamp: number,
9    |        public readonly changedFiles: string[],
10   |    ) {
11   |        super(label, vscode.TreeItemCollapsibleState.Collapsed);
12   |        this.tooltip = `Layer: ${this.label}\nID: ${this.id}`;
13   |        this.description = `${this.changedFiles.length} file(s)`;
14   |        this.contextValue = 'layer';
15   |        this.iconPath = new vscode.ThemeIcon('layers');
16   |    }
17   |
18   |    getFiles(): LayerFile[] {
19   |        return this.changedFiles.map(file => new LayerFile(file, this));
20   |    }
21   |
22   |    getPreviousLayerName(): string {
23   |       return `State before this layer`;
24   |    }
25   |}
26   |
27   |export class LayerFile extends vscode.TreeItem {
28   |    constructor(
29   |        public readonly label: string,
30   |        public readonly layer: Layer
31   |    ) {
32   |        super(path.basename(label), vscode.TreeItemCollapsibleState.None);
33   |        const dirname = path.dirname(label);
34   |        // Only show the description if it's a real subdirectory, not '.'
35   |        this.description = dirname === '.' ? '' : dirname;
36   |        this.resourceUri = vscode.Uri.file(path.join(vscode.workspace.workspaceFolders![0].uri.fsPath, label));
37   |        this.command = {
38   |            command: 'changelayers.showDiff',
39   |            title: 'Show Layer Diff',
40   |            arguments: [this.layer, this.label]
41   |        };
42   |        this.contextValue = 'layerFile';
43   |        this.iconPath = new vscode.ThemeIcon('code');
44   |    }
45   |}
--- File End ---

File Path: src/LayerProvider.ts
--- File Start ---
1    |import * as vscode from 'vscode';
2    |import * as fs from 'fs';
3    |import * as path from 'path';
4    |import { Layer, LayerFile } from './Layer';
5    |import { Git } from './Git';
6    |
7    |interface LayerData {
8    |    id: string;
9    |    label: string;
10   |    timestamp: number;
11   |    changedFiles: string[];
12   |}
13   |
14   |export class LayerProvider implements vscode.TreeDataProvider<Layer | LayerFile> {
15   |    private _onDidChangeTreeData: vscode.EventEmitter<Layer | undefined | null | void> = new vscode.EventEmitter<Layer | undefined | null | void>();
16   |    readonly onDidChangeTreeData: vscode.Event<Layer | undefined | null | void> = this._onDidChangeTreeData.event;
17   |
18   |    private layers: Layer[] = [];
19   |
20   |    constructor(private context: vscode.ExtensionContext, private git: Git) {
21   |        this.loadLayersFromMetadata();
22   |    }
23   |
24   |    refresh(): void {
25   |        this.loadLayersFromMetadata();
26   |        this._onDidChangeTreeData.fire();
27   |    }
28   |
29   |    getTreeItem(element: Layer | LayerFile): vscode.TreeItem {
30   |        return element;
31   |    }
32   |
33   |    getChildren(element?: Layer): vscode.ProviderResult<Layer[] | LayerFile[]> {
34   |        if (element) {
35   |            return element.getFiles();
36   |        } else {
37   |            return this.layers;
38   |        }
39   |    }
40   |
41   |    // --- Storage and Metadata ---
42   |
43   |    private getWorkspaceRoot(): string {
44   |        if (!vscode.workspace.workspaceFolders || vscode.workspace.workspaceFolders.length === 0) {
45   |            throw new Error('No workspace folder open.');
46   |        }
47   |        return vscode.workspace.workspaceFolders[0].uri.fsPath;
48   |    }
49   |
50   |    private getLayersRootPath(): string {
51   |        return path.join(this.getWorkspaceRoot(), '.vscode', 'changelayers');
52   |    }
53   |
54   |    private getSnapshotsRootPath(): string {
55   |        return path.join(this.getLayersRootPath(), 'snapshots');
56   |    }
57   |
58   |    private getMetadataPath(): string {
59   |        return path.join(this.getLayersRootPath(), 'metadata.json');
60   |    }
61   |
62   |    private loadLayersFromMetadata() {
63   |        try {
64   |            if (!fs.existsSync(this.getMetadataPath())) {
65   |                this.layers = [];
66   |                return;
67   |            }
68   |            const metadataContent = fs.readFileSync(this.getMetadataPath(), 'utf-8');
69   |            const layersData: LayerData[] = JSON.parse(metadataContent);
70   |            this.layers = layersData.map(data => new Layer(data.label, data.id, data.timestamp, data.changedFiles));
71   |            this.layers.sort((a, b) => a.timestamp - b.timestamp);
72   |        } catch (error) {
73   |            console.error("Failed to load layers metadata", error);
74   |            this.layers = [];
75   |        }
76   |    }
77   |
78   |    private saveMetadata() {
79   |        const layersData = this.layers.map(layer => ({
80   |            id: layer.id,
81   |            label: layer.label,
82   |            timestamp: layer.timestamp,
83   |            changedFiles: layer.changedFiles
84   |        }));
85   |        if (!fs.existsSync(this.getLayersRootPath())) {
86   |            fs.mkdirSync(this.getLayersRootPath(), { recursive: true });
87   |        }
88   |        fs.writeFileSync(this.getMetadataPath(), JSON.stringify(layersData, null, 2));
89   |    }
90   |
91   |    // --- Core Functionality ---
92   |
93   |    async createLayer(label: string): Promise<void> {
94   |        await this.git.checkIsRepo();
95   |        const changedFiles = await this.git.getChangedFiles(); // Get all changed files in workdir
96   |        const filesToSnapshot: string[] = [];
97   |
98   |        const lastLayer = this.layers[this.layers.length - 1];
99   |        const newLayerId = Date.now().toString();
100  |        const newLayerSnapshotPath = path.join(this.getSnapshotsRootPath(), newLayerId);
101  |        fs.mkdirSync(newLayerSnapshotPath, { recursive: true });
102  |
103  |        for (const file of changedFiles) {
104  |            const currentFilePath = path.join(this.getWorkspaceRoot(), file);
105  |            if (!fs.existsSync(currentFilePath)) continue; // Skip deleted files for now
106  |            
107  |            const currentContent = fs.readFileSync(currentFilePath, 'utf-8');
108  |            let previousContent: string;
109  |
110  |            if (!lastLayer) { // First layer, compare against HEAD
111  |                previousContent = await this.git.getFileContentAtHead(file);
112  |            } else { // Subsequent layer, compare against previous snapshot
113  |                const prevSnapshotPath = path.join(this.getSnapshotsRootPath(), lastLayer.id, file);
114  |                if (fs.existsSync(prevSnapshotPath)) {
115  |                    previousContent = fs.readFileSync(prevSnapshotPath, 'utf-8');
116  |                } else {
117  |                    // File was not in the last layer, so compare to HEAD
118  |                    previousContent = await this.git.getFileContentAtHead(file);
119  |                }
120  |            }
121  |
122  |            if (currentContent !== previousContent) {
123  |                filesToSnapshot.push(file);
124  |                const destPath = path.join(newLayerSnapshotPath, file);
125  |                fs.mkdirSync(path.dirname(destPath), { recursive: true });
126  |                fs.writeFileSync(destPath, currentContent);
127  |            }
128  |        }
129  |
130  |        if (filesToSnapshot.length === 0) {
131  |            throw new Error('No changes detected since the last layer or HEAD.');
132  |        }
133  |
134  |        const newLayer = new Layer(label, newLayerId, parseInt(newLayerId, 10), filesToSnapshot);
135  |        this.layers.push(newLayer);
136  |        this.saveMetadata();
137  |    }
138  |
139  |    async getDiffUris(targetLayer: Layer, filePath: string): Promise<{ left: vscode.Uri, right: vscode.Uri } | null> {
140  |        const targetLayerIndex = this.layers.findIndex(l => l.id === targetLayer.id);
141  |        if (targetLayerIndex === -1) return null;
142  |
143  |        const previousLayer = targetLayerIndex > 0 ? this.layers[targetLayerIndex - 1] : null;
144  |        const isLastLayer = targetLayerIndex === this.layers.length - 1;
145  |
146  |        let rightUri: vscode.Uri;
147  |        if (isLastLayer) {
148  |            // For the most recent layer, compare against the live file in the workspace. This makes it editable.
149  |            rightUri = vscode.Uri.file(path.join(this.getWorkspaceRoot(), filePath));
150  |        } else {
151  |            // For historical layers, use the static snapshot.
152  |            const rightSnapshotPath = path.join(this.getSnapshotsRootPath(), targetLayer.id, filePath);
153  |            rightUri = vscode.Uri.file(rightSnapshotPath);
154  |        }
155  |
156  |        // The logic for the "left" side now uses a virtual document to ensure it's read-only.
157  |        let leftUri: vscode.Uri;
158  |        if (previousLayer) {
159  |            // The URI contains the file path and the layer ID in the query
160  |            const query = `layerId=${previousLayer.id}`;
161  |            leftUri = vscode.Uri.parse(`changelayer-readonly:${filePath}?${query}`);
162  |        } else {
163  |            // For the first layer, the URI indicates we should get the content from HEAD
164  |            const query = `head=true`;
165  |            leftUri = vscode.Uri.parse(`changelayer-readonly:${filePath}?${query}`);
166  |        }
167  |
168  |        return { left: leftUri, right: rightUri };
169  |    }
170  |
171  |    async revertFile(file: LayerFile) {
172  |        const targetLayerIndex = this.layers.findIndex(l => l.id === file.layer.id);
173  |        const previousLayer = targetLayerIndex > 0 ? this.layers[targetLayerIndex - 1] : null;
174  |        
175  |        let contentToRevertTo: string;
176  |        if (previousLayer) {
177  |            const previousSnapshotPath = path.join(this.getSnapshotsRootPath(), previousLayer.id, file.label);
178  |            if (!fs.existsSync(previousSnapshotPath)) {
179  |                // If the file didn't exist in the previous layer, it means it was created in the target layer.
180  |                // Reverting means deleting it from the working directory.
181  |                fs.unlinkSync(path.join(this.getWorkspaceRoot(), file.label));
182  |                return;
183  |            }
184  |            contentToRevertTo = fs.readFileSync(previousSnapshotPath, 'utf-8');
185  |        } else {
186  |            // Reverting the first layer means reverting to HEAD
187  |            contentToRevertTo = await this.git.getFileContentAtHead(file.label);
188  |        }
189  |
190  |        fs.writeFileSync(path.join(this.getWorkspaceRoot(), file.label), contentToRevertTo);
191  |    }
192  |    
193  |    async discardLayer(layerId: string): Promise<void> {
194  |        const layerIndex = this.layers.findIndex(l => l.id === layerId);
195  |        if (layerIndex === -1) return;
196  |        
197  |        if(layerIndex < this.layers.length - 1) {
198  |            throw new Error('For safety, only the most recent layer can be discarded.');
199  |        }
200  |
201  |        const layerToDiscard = this.layers[layerIndex];
202  |        // Revert all files in the discarded layer
203  |        for (const file of layerToDiscard.changedFiles) {
204  |            await this.revertFile(new LayerFile(file, layerToDiscard));
205  |        }
206  |
207  |        // Delete snapshot directory
208  |        const snapshotDir = path.join(this.getSnapshotsRootPath(), layerToDiscard.id);
209  |        if (fs.existsSync(snapshotDir)) {
210  |            fs.rmSync(snapshotDir, { recursive: true, force: true });
211  |        }
212  |        
213  |        // Update metadata
214  |        this.layers.pop();
215  |        this.saveMetadata();
216  |    }
217  |
218  |    async discardAllLayers(): Promise<void> {
219  |        // Get a unique list of all files affected by any layer.
220  |        const allChangedFiles = Array.from(new Set(this.layers.flatMap(l => l.changedFiles)));
221  |
222  |        if (allChangedFiles.length > 0) {
223  |            // Use git's native checkout command to discard all changes.
224  |            // This correctly handles line endings and other metadata, resulting in a clean git status.
225  |            await this.git.checkoutFiles(allChangedFiles);
226  |        }
227  |
228  |        // Delete all snapshots and metadata
229  |        const layersRoot = this.getLayersRootPath();
230  |        if (fs.existsSync(layersRoot)) {
231  |            fs.rmSync(layersRoot, { recursive: true, force: true });
232  |        }
233  |
234  |        this.layers = [];
235  |        this.refresh();
236  |    }
237  |}
--- File End ---

File Path: src/ReadonlyContentProvider.ts
--- File Start ---
1    |import * as vscode from 'vscode';
2    |import * as fs from 'fs';
3    |import * as path from 'path';
4    |import { Git } from './Git';
5    |
6    |export class ReadonlyContentProvider implements vscode.TextDocumentContentProvider {
7    |
8    |    constructor(private git: Git) {}
9    |
10   |    async provideTextDocumentContent(uri: vscode.Uri): Promise<string> {
11   |        const query = new URLSearchParams(uri.query);
12   |        // The path in the URI is the exact file path we need, no substring required.
13   |        const filePath = uri.path;
14   |        const workspaceRoot = vscode.workspace.workspaceFolders![0].uri.fsPath;
15   |
16   |        if (query.has('head')) {
17   |            // Content is from HEAD
18   |            return this.git.getFileContentAtHead(filePath);
19   |        }
20   |
21   |        if (query.has('layerId')) {
22   |            // Content is from a snapshot
23   |            const layerId = query.get('layerId')!;
24   |            const snapshotPath = path.join(workspaceRoot, '.vscode', 'changelayers', 'snapshots', layerId, filePath);
25   |            if (fs.existsSync(snapshotPath)) {
26   |                return fs.readFileSync(snapshotPath, 'utf-8');
27   |            }
28   |        }
29   |        
30   |        // Return empty string if no content could be found (e.g. file was created new in a layer)
31   |        return '';
32   |    }
33   |}
--- File End ---

File Path: tsconfig.json
--- File Start ---
1    |{
2    |  "compilerOptions": {
3    |    "module": "commonjs",
4    |    "target": "ES2020",
5    |    "outDir": "out",
6    |    "lib": [
7    |      "ES2020"
8    |    ],
9    |    "sourceMap": true,
10   |    "rootDir": "src",
11   |    "strict": true,
12   |    "noImplicitAny": false 
13   |  },
14   |  "exclude": [
15   |    "node_modules",
16   |    ".vscode-test"
17   |  ]
18   |}
--- File End ---

````
